Chapter 1-2 Quiz

1.  abstraction:  to distill a complicated system down to the most fundamental parts and describe 
these parts in a simple precise language.
correctness:  giving the correct answer for all possible inputs that one might encounter within a 
certain domain of interest.
encapsulation:  the components of a software system hide implementation details.
modularity:  the components of a software system are separated into functional units.
robustness:  giving the correct output or error message for all inputs when run on all hardware 
platforms.

2.  To experimentally study running time, we can:  Execute the program on various test inputs of 
various sizes and record the time spent in each execution.  Then analyze the results.

3.  A theoretical analysis of an algorithm design shows us all we need to know about its actual 
running time for any input:  false, actual running time depends on implementation.

4.  logba=c if:  a = bc.

5.  Which of the following is not a way to prove something about an algorithm?  By forming a 
hypothesis and testing with experiments.

6.  1 + 3 + 9 + 27 + … + 3n-1 = (1- an+1)/(1 – a) = (1 – 3n)/(1 – 3) = (1 – 3n)/-2 = (3n – 1)/2

7.  log(2n) = log(2) + log(n) = 1 + log(n)

8.  What is the simplest and best O-notation for f(n) = 17log2n + 2nlog2n + 4n?  O(nlog2n)

9.  Class A fields z and methods f(), g(), and h()
     Class B extends A fields y, z and methods m(), n(), g()
     Class B has three fields.
     The method h() can be invoked in an object instantiated from class B.
     Code in class B can access any method defined in class A or B.

10.  Suppose algorithm E takes 2n steps and algorithm C takes n3 steps.  For what input sizes will 
the exponential algorithm be faster?  2 to 9.

11.  Is nlogbn < n for n > b.  Yes, if n>b then logbn > 1.

12.  Is the asymptotic growth rate of n less than the growth rate of log n?  No.

13.  Is the asymptotic growth rate of 2n larger than the growth rate of log n15?  Yes.

14.  Is the complexity class O(n2) a subset of O(n3)?  Yes.

15.  Which of the following are true?  An object comes from a class, a class definition can be 
enforced as a type.

16.  Big O?											O(1)

public void AnalyzeMe1(int n) {
    int a;
    for (int i=0;i<100;i++)
        a=n;
17.  Big O?											O(n2)

public void analyzeMe2(int n) {
    int a;
    for (int i=0;i<n;i+=2)
        for (int j=0;j<=n;j++)
            a = i;
18.  Big O?											O(n2)

public void analyzeMe3(int n) {
    int a;
    for (int i=0;i<n;i++)
        for (int j=1;j<=i;j++)
            a=i;
19.  Big O?											O(n3)

public void analyzeMe4(int n) {
    int a;
    for (int i=0;i<n;i++)
        for (int j=0;j<=n*n;j++)
            a=i;

